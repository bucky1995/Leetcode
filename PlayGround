static bool compare(vector<int> a, vector<int> b){
    return a[1] < b[1];
}
vector<vector<int>> applicationPairs(int deviceCapacity, vector<vector<int>> foregroundAppList, vector<vector<int>> backgroundAppList) {
    sort(foregroundAppList.begin(), foregroundAppList.end(), compare);
    sort(backgroundAppList.begin(), backgroundAppList.end(), compare);
    
    int max_memory = -1;
    vector<vector<int>> res;
    
    int fore = 0;
    int back = backgroundAppList.size()-1;
    
    while(fore<foregroundAppList.size() && back>=0){
        int memory_sum = foregroundAppList[fore].back() + backgroundAppList[back].back();
        
        if(memory_sum > deviceCapacity){
            back--;
        }else{
            if(max_memory <= memory_sum){
                if(max_memory < memory_sum){
                    res = vector<vector<int>> ({});
                    max_memory = memory_sum;
                }
                    
                res.push_back({foregroundAppList[fore].front(), foregroundAppList[fore].front()});
                
                int end = back;
                
                while(end>0 && backgroundAppList[end][1] == backgroundAppList[end-1][1]){
                    res.push_back({foregroundAppList[fore].front(), foregroundAppList[end-1].front()});
                    end--;
                }
            }
        }
        fore++;
    }
    return res;
}